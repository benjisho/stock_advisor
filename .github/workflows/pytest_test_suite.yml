name: CI Pipeline with Pytest

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10.0, 3.11]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-cov pytest-html pytest-xdist

    - name: Run unit tests (fast)
      run: |
        pytest tests/ -m "unit" -v --tb=short

    - name: Run smoke tests (quick validation)
      run: |
        pytest tests/ -m "smoke" -v --tb=short

    - name: Run integration tests (with network)
      run: |
        pytest tests/ -m "integration and not slow" -v --tb=short
      continue-on-error: true  # Network tests may fail due to external dependencies

    - name: Run all data source tests (comprehensive)
      run: |
        pytest tests/ -m "data_source" -v --tb=short --maxfail=3
      continue-on-error: true  # External APIs may be unreliable

    - name: Generate test report
      run: |
        pytest tests/ --tb=short --html=pytest_report.html --self-contained-html --cov=. --cov-report=html --cov-report=term-missing --maxfail=5
      continue-on-error: true

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: pytest-results-${{ matrix.python-version }}
        path: |
          pytest_report.html
          htmlcov/
          
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort

    - name: Run flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

    - name: Check code formatting with black
      run: |
        black --check --diff .

    - name: Check import sorting with isort
      run: |
        isort --check-only --diff .

  security:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run safety check
      run: |
        python -m pip install --upgrade pip
        pip install safety
        pip install -r requirements.txt
        safety check --json || true  # Don't fail on security issues, just report